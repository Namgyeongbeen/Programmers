-- 2022년 3월의 오프라인/온라인 상품 판매 데이터의
-- 판매 날짜, 상품ID, 유저ID, 판매량 출력
-- 오프라인 세일의 USER_ID는 NULL로 표시
-- 판매일 오름차순, 상품ID 오름차순, 유저ID 오름차순 정렬

-- 25.02.13
SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
     , PRODUCT_ID, USER_ID, SALES_AMOUNT
    FROM ONLINE_SALE
    WHERE SALES_DATE BETWEEN '2022-03-01' AND '2022-03-31'

UNION ALL

SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
     , PRODUCT_ID, NULL AS USER_ID, SALES_AMOUNT
    FROM OFFLINE_SALE
    WHERE SALES_DATE BETWEEN '2022-03-01' AND '2022-03-31'
    ORDER BY SALES_DATE, PRODUCT_ID, USER_ID















# SELECT *
#     FROM ( 
#         SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
#              , PRODUCT_ID
#              , USER_ID
#              , SALES_AMOUNT 
#             FROM ONLINE_SALE
#         UNION ALL
#         SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE
#              , PRODUCT_ID
#              , NULL AS USER_ID
#              , SALES_AMOUNT
#             FROM OFFLINE_SALE
#     ) AS BASE
#     WHERE SALES_DATE BETWEEN '2022-03-01' AND '2022-03-31'
#     ORDER BY SALES_DATE, PRODUCT_ID, USER_ID






















# SELECT *
#     FROM 
#     (
#         SELECT DATE_FORMAT(O1.SALES_DATE, '%Y-%m-%d') AS SALES_DATE
#              , O1.PRODUCT_ID, O1.USER_ID, O1.SALES_AMOUNT
#             FROM ONLINE_SALE O1
#         UNION ALL
#         SELECT DATE_FORMAT(O2.SALES_DATE, '%Y-%m-%d') AS SALES_DATE
#              , O2.PRODUCT_ID, NULL AS USER_ID, O2.SALES_AMOUNT
#             FROM OFFLINE_SALE O2
#         ) B
#     WHERE B.SALES_DATE BETWEEN '2022-03-01' AND '2022-03-31'
#     ORDER BY B.SALES_DATE, B.PRODUCT_ID, B.USER_ID